version: 2.1

orbs:
  node: circleci/node@5.2.0

executors:
  node-executor:
    docker:
      - image: cimg/node:20.11.0
    working_directory: ~/repo

  playwright-executor:
    docker:
      - image: mcr.microsoft.com/playwright:v1.48.0-focal
    working_directory: ~/repo
    environment:
      NODE_ENV: test
      CI: true

jobs:
  test:
    executor: node-executor
    steps:
      - checkout
      
      # Cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      
      # Install dependencies
      - run:
          name: Install dependencies
          command: npm ci
      
      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      
      # Run formatting check
      - run:
          name: Check formatting
          command: npm run format:check
      
      # Run linting
      - run:
          name: Lint
          command: npm run lint
      
      # Run TypeScript check
      - run:
          name: TypeScript check
          command: npx tsc --noEmit
      
      # Run tests
      - run:
          name: Run tests
          command: npm run test:ci
      
      # Store test results
      - store_test_results:
          path: coverage
      
      # Store coverage artifacts
      - store_artifacts:
          path: coverage
          destination: coverage

  build:
    executor: node-executor
    steps:
      - checkout
      
      # Cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      
      # Install dependencies
      - run:
          name: Install dependencies
          command: npm ci
      
      # Build the application
      - run:
          name: Build
          command: npm run build
          environment:
            NEXT_PUBLIC_API_BASE_URL: https://shot-counter.fly.dev
            NEXT_PUBLIC_SERVER_URL: https://shot-counter.fly.dev
            NEXT_PUBLIC_WEBSOCKET_URL: wss://shot-counter.fly.dev
      
      # Store build artifacts
      - persist_to_workspace:
          root: .
          paths:
            - .next
            - public
            - package.json
            - package-lock.json
      
      # Store build artifacts for debugging
      - store_artifacts:
          path: .next
          destination: build

  e2e-tests:
    executor: playwright-executor
    steps:
      - checkout
      
      # Cache node dependencies
      - restore_cache:
          keys:
            - v2-e2e-dependencies-{{ checksum "package-lock.json" }}
            - v2-e2e-dependencies-
      
      # Install dependencies
      - run:
          name: Install dependencies
          command: |
            npm ci
            # Install Playwright as dev dependency if not present
            npm list @playwright/test || npm install -D @playwright/test
      
      # Install Playwright browsers
      - run:
          name: Install Playwright browsers
          command: npx playwright install --with-deps chromium
      
      # Save cache
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/ms-playwright
          key: v2-e2e-dependencies-{{ checksum "package-lock.json" }}
      
      # Run E2E tests against production
      - run:
          name: Run E2E smoke tests
          command: |
            # Run tests against production site
            npm run e2e:ci
          environment:
            CI: true
            PLAYWRIGHT_JUNIT_OUTPUT_NAME: results.xml
      
      # Store test results
      - store_test_results:
          path: test-results
      
      # Store test artifacts
      - store_artifacts:
          path: test-results
          destination: playwright-results
      
      # Store any screenshots/videos
      - store_artifacts:
          path: test-results
          destination: test-artifacts
          when: always

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      
      # Attach workspace
      - attach_workspace:
          at: .
      
      # Install flyctl
      - run:
          name: Install flyctl
          command: |
            curl -L https://fly.io/install.sh | sh
            echo 'export PATH="$HOME/.fly/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
      
      # Deploy to Fly.io
      - run:
          name: Deploy to Fly.io
          command: |
            ~/.fly/bin/flyctl deploy --remote-only

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test
      
      - build:
          requires:
            - test
      
      # Run E2E tests in parallel with build
      # These run against the production site
      - e2e-tests:
          requires:
            - test
      
      - deploy:
          requires:
            - build
            # Don't require e2e-tests to pass for deployment
            # since they test against production
          filters:
            branches:
              only: main
          context: fly-deployment  # CircleCI context with FLY_API_TOKEN